"use server";

import { prisma } from "@/lib/prisma";
import React from "react";
import {
  CardTitle,
  CardHeader,
  CardContent,
  Card,
  CardDescription,
  CardFooter,
} from "@/components/ui/card";
import {
  TableHead,
  TableRow,
  TableHeader,
  TableCell,
  TableBody,
  Table,
} from "@/components/ui/table";
import {
  Pagination,
  PaginationContent,
  PaginationEllipsis,
  PaginationItem,
  PaginationLink,
  PaginationNext,
  PaginationPrevious,
} from "@/components/ui/pagination";

import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";

type PropTypes = {
  surveyTotals: number;
};

export default async function CompletedSurveysTable(props: PropTypes) {
  async function getSurveys(skip: number) {
    return await prisma.survey.findMany({
      skip: skip,
      take: 10,
      orderBy: [
        {
          createdAt: "desc",
        },
      ],
      include: {
        url: {
          select: {
            creatorName: true,
            creatorEmail: true,
          },
        },
      },
    });
  }

  const surveys = await getSurveys(0);
  const showing = `1-10`;

  return (
    <Card x-chunk="dashboard-05-chunk-3">
      <CardHeader className="px-7">
        <CardTitle>Completed Surveys</CardTitle>
        <CardDescription>
          All surveys that have been completed by our clients.
        </CardDescription>
      </CardHeader>
      <CardContent>
        <Table>
          <TableHeader>
            <TableRow>
              <TableHead>Generated By</TableHead>
              <TableHead className="hidden sm:table-cell">Gender</TableHead>
              <TableHead className="hidden sm:table-cell">Age</TableHead>
              <TableHead className="hidden md:table-cell">Location</TableHead>
              <TableHead className="hidden md:table-cell">
                Date Submitted
              </TableHead>
              <TableHead className="text-right">Blockchain Course?</TableHead>
            </TableRow>
          </TableHeader>
          <TableBody>
            {surveys.map((survey) => (
              <TableRow key={survey.id}>
                <TableCell>
                  <div className="font-medium">{survey.url.creatorName}</div>
                  <div className="hidden text-sm text-muted-foreground md:inline">
                    {survey.url.creatorEmail}
                  </div>
                </TableCell>
                <TableCell className="capitalize hidden sm:table-cell">
                  {survey.gender}
                </TableCell>
                <TableCell className="hidden sm:table-cell">
                  <Badge className="text-xs" variant="secondary">
                    {survey.age}
                  </Badge>
                </TableCell>
                <TableCell className="capitalize hidden md:table-cell">
                  {survey.location}
                </TableCell>
                <TableCell className="hidden md:table-cell">
                  {survey.createdAt.toDateString()}
                </TableCell>
                <TableCell className="text-right">
                  {survey.blockchain_course ? "Yes" : "No"}
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </CardContent>
      <CardFooter className="flex items-center justify-between">
        <div className="text-xs text-muted-foreground">
          Showing <strong>{`${showing}`}</strong> of{" "}
          <strong>{props.surveyTotals}</strong> products
          {"\n              "}
        </div>
        <div className="flex flex-col">
          <Pagination>
            <PaginationContent>
              <PaginationItem>
                <PaginationPrevious href="#" />
              </PaginationItem>
              <PaginationItem>
                <PaginationLink href="#">1</PaginationLink>
              </PaginationItem>
              <PaginationItem>
                <PaginationEllipsis />
              </PaginationItem>
              <PaginationItem>
                <PaginationNext href="#" />
              </PaginationItem>
            </PaginationContent>
          </Pagination>
        </div>
      </CardFooter>
    </Card>
  );
}
